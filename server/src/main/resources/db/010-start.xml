<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">
    <changeSet author="evgNep" id="010-start">
        <sql>
            CREATE SEQUENCE public.hibernate_sequence;
        </sql>

        <sql>
            -- currency
            CREATE TABLE currency (
            id bigint not null,
            name text not null,
            code text not null,
            CONSTRAINT currency_pk PRIMARY KEY (id)
            );

            CREATE UNIQUE INDEX currency_name ON public.currency (name);
            CREATE UNIQUE INDEX currency_code ON public.currency (code);
        </sql>

        <sql>
            -- account
            CREATE TABLE account (
            id bigint not null,
            name text not null,
            closed bool not null,
            is_money bool not null,
            note text,
            total numeric(19,2) not null,
            currency_id bigint not null,
            CONSTRAINT account_pk PRIMARY KEY (id),

            CONSTRAINT account_currency_id_fk FOREIGN KEY (currency_id)
            REFERENCES public.currency (id)
            ON UPDATE RESTRICT
            ON DELETE RESTRICT
            );

            CREATE UNIQUE INDEX account_name ON public.account (name);
        </sql>

        <sql>
            -- user
            CREATE TABLE appl_user (
            id bigint not null,
            name text not null,
            is_child bool not null,
            CONSTRAINT user_pk PRIMARY KEY (id)
            );

            CREATE UNIQUE INDEX user_name ON public.appl_user (name);
        </sql>

        <sql>
            -- account_group
            CREATE TABLE account_group (
            id bigint not null,
            name text not null,
            CONSTRAINT account_group_pk PRIMARY KEY (id)
            );

            CREATE UNIQUE INDEX account_group_name ON public.account_group (name);

            CREATE TABLE account_to_group (
            account_id bigint not null,
            group_id bigint not null,
            CONSTRAINT account_to_group_pk PRIMARY KEY (account_id, group_id),

            CONSTRAINT account_to_group_account_fk FOREIGN KEY (account_id)
            REFERENCES public.account (id)
            ON UPDATE RESTRICT
            ON DELETE CASCADE,

            CONSTRAINT account_to_group_group_fk FOREIGN KEY (group_id)
            REFERENCES public.account_group (id)
            ON UPDATE RESTRICT
            ON DELETE CASCADE
            );
        </sql>

        <sql>
            -- record
            CREATE TABLE record (
            id uuid not null,
            time timestamp with time zone NOT NULL,
            create_time timestamp with time zone NOT NULL DEFAULT 'now()',
            update_time timestamp with time zone,
            note text,
            validated bool NOT NULL,
            creator_id bigint NOT NULL,

            CONSTRAINT record_pk PRIMARY KEY (id),

            CONSTRAINT record_creator_fk FOREIGN KEY (creator_id)
            REFERENCES public.appl_user (id)
            ON UPDATE RESTRICT
            ON DELETE RESTRICT
            );
        </sql>

        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION record_update_trigger_fnc()
            RETURNS trigger AS
            $$
            BEGIN
            NEW.update_time = 'now()';
            RETURN NEW;
            END;
            $$  LANGUAGE 'plpgsql';
        </sql>

        <sql>
            CREATE TRIGGER record_update_trigger BEFORE UPDATE
            ON record FOR EACH ROW
            EXECUTE PROCEDURE record_update_trigger_fnc();
        </sql>

        <sql>
            -- record_part
            CREATE TABLE record_part (
            id bigint not null,
            record_id uuid not null,
            account_id bigint not null,
            money numeric(19,2) not null,
            no integer not null,
            note text,

            CONSTRAINT record_part_pk PRIMARY KEY (id),

            CONSTRAINT record_part_record_fk FOREIGN KEY (record_id)
            REFERENCES public.record (id)
            ON UPDATE RESTRICT
            ON DELETE CASCADE,

            CONSTRAINT record_part_account_fk FOREIGN KEY (account_id)
            REFERENCES public.account (id)
            ON UPDATE RESTRICT
            ON DELETE RESTRICT
            );
        </sql>
    </changeSet>
</databaseChangeLog>
